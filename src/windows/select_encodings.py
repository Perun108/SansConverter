"""Select Encodings dialog window generated by QtDesigner with edits"""

from PyQt5.QtWidgets import (
    QCheckBox,
    QApplication,
    QDialog,
    QGridLayout,
    QVBoxLayout,
    QDialogButtonBox,
)
from PyQt5.QtCore import QMetaObject, QCoreApplication, Qt

from encoding_mappings import Encodings
from windows.select_encodings_warning import WarningDialog


class UiSelectEncodingsDialog(QDialog):
    """Enable/Disable encodings GUI"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)
        self.selected_encodings = []

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        Dialog.setWindowTitle(
            QCoreApplication.translate("Dialog", "Select encodings", None)
        )
        self.mainLayout = QVBoxLayout(Dialog)
        self.gridLayout = QGridLayout()
        self.mainLayout.addLayout(self.gridLayout)

        self.buttonBox = QDialogButtonBox(Dialog)
        self.buttonBox.setObjectName("buttonBox")
        self.buttonBox.setOrientation(Qt.Horizontal)
        self.buttonBox.setStandardButtons(QDialogButtonBox.Cancel | QDialogButtonBox.Ok)
        self.mainLayout.addWidget(self.buttonBox)

        self._add_checkboxes(Dialog)

        self.buttonBox.accepted.connect(self.check_selected_encodings)
        self.buttonBox.rejected.connect(self.check_selected_encodings)

        QMetaObject.connectSlotsByName(Dialog)

    def _add_checkboxes(self, dialog):
        """Add checkBoxes for all encodings for users to select from"""

        self.checkboxes = [QCheckBox(dialog) for _ in Encodings]
        for idx, checkbox in enumerate(self.checkboxes):
            checkbox.setObjectName(f"checkBox_{idx}")
            checkbox.setText(
                QCoreApplication.translate("Dialog", list(Encodings)[idx].value, None)
            )
            # We won't have more than 8 encodings, so 4 is good for the foreseen future
            self.gridLayout.addWidget(checkbox, idx % 4, idx // 4, 1, 1)

    def get_selected_encodings(self):
        """Returns a list of selected encodings"""

        selected_encodings = [cb.text() for cb in self.checkboxes if cb.isChecked()]
        print(f"GET SELECTED {selected_encodings}")
        return selected_encodings

    def check_selected_encodings(self):
        print("CHECK SELECTED")
        selected_encodings = self.get_selected_encodings()
        print("SELECTED", selected_encodings)
        if not selected_encodings:
            warning_dialog = WarningDialog(self)
            if warning_dialog.exec() == QDialog.accepted:
                self.accept()
            else:
                return
        else:
            self.accept()


if __name__ == "__main__":
    import sys

    app = QApplication(sys.argv)
    Dialog = QDialog()
    ui = UiSelectEncodingsDialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
